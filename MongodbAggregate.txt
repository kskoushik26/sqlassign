Json file Import in mongoDB
mongoimport --db population --collection zipcodes --file C:\Jagadish\data\db\zips.json
=====================================================================
1. use db.zipcodes.find() to filter results to only the results where city is ATLANTA and state is GA..........not equal replace eq with nq
db.zipcodes.find( { $and: [ { "city": { $eq: "ATLANTA"} }, { "state": { $eq: "GA" } } ] } )
=====================================================================
2. use db.zipcodes.aggregate with $match to do the same as above.
db.zipcodes.aggregate( { $match:{ $and: [ { "city": { $eq: "ATLANTA"} }, { "state": { $eq: "GA" } } ] }} );
=====================================================================
3. use $group to count the number of zip codes in Atlanta.
 db.zipcodes.aggregate([{$match: {"city": {$eq: "ATLANTA"} }},{ $count: "city"}]);
=========================================================================
4. use $group to find the total population in Atlanta
db.zipcodes.aggregate([      {$match:{city:"ATLANTA"}},  {$group:{_id:"$city",totalSum:{$sum: "$pop"}}}       ])
=======================================================================
Population by State

1. use aggregate to calculate the total population for each state
 db.zipcodes.aggregate({$group:{_id:"$state",totalPop:{$sum:"$pop"}}});
===========================================================
2. sort the results by population, highest first
db.zipcodes.aggregate([{$group:{_id:"$state",totalPop:{$sum:"$pop"}}},{$sort:{totalPop:-1}}]);
=============================================================
3. limit the results to just the first 3 results. What are the top 3 states in population.
db.zipcodes.aggregate([{$group:{_id:"$state",totalPop:{$sum:"$pop"}}},{$sort:{totalPop:-1}},{$limit:3}]);
==============================================================
Populations by City

1. use aggregate to calculate the total population for each city (you have to use city/state combination). 
You can use a combination for the _id of the $group: { city: '$city', state: '$state' }.
db.zipcodes.aggregate({$group:{_id:{ city: '$city', state: '$state'},totalPop:{$sum:"$pop"}}});
================================================================
2. sort the results by population, highest first.
db.zipcodes.aggregate([{$group:{_id:"$city",totalPop:{$sum:"$pop"}}},{$sort:{totalPop:-1}}]);
===================================================================
3. limit the results to just the first 3 results. What are the top 3 cities in population.
db.zipcodes.aggregate([{$group:{_id:"$city",totalPop:{$sum:"$pop"}}},{$sort:{totalPop:-1}},{$limit:3}]);
======================================================================
4. What are the top 3 cities in population in Texas?
db.zipcodes.aggregate([ {$group:{_id:{city:"TEXAS",state:"$state"},pop:{$sum:"$pop"}}},{$sort:{pop:-1}},{$limit:3}]);
=========================================================================
Bonus

1. Write a query to get the average city population for each state.
db.zipcodes.aggregate([ {$group:{_id:{city:"$city",state:"$state"},avgpop:{$avg:"$pop"}}}]);
=============================================================================
2. What are the top 3 states in terms of average city population?
 db.zipcodes.aggregate([ {$group:{_id:{city:"$city",state:"$state"},avgpop:{$avg:"$pop"}}},{$sort:{avgpop:-1}},{$limit:3}]);


